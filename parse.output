Terminals unused in grammar

   NOTUSED
   Except
   Lambda
   With
   As
   Finally
   Nonlocal
   Assert
   Yield
   From
   Global
   Raise
   Del
   Try
   Import


Grammar

    0 $accept: file $end

    1 file: stmts EndMarker
    2     | EndMarker

    3 stmts: stmt stmts
    4      | stmt

    5 stmt: compound_stmt
    6     | simple_stmt

    7 simple_stmt: small_stmt Newline
    8            | small_stmt ';' simple_stmt

    9 small_stmt: decl
   10           | call
   11           | assign
   12           | Return expr
   13           | Pass
   14           | Break
   15           | Continue

   16 compound_stmt: func_def
   17              | class_def
   18              | if_stmt
   19              | for_stmt
   20              | while_stmt

   21 type: Ident
   22     | String

   23 decl: Ident ':' type init_option

   24 init_option: '=' expr
   25            | EMPTY

   26 call: name '(' exprs_option ')'

   27 assign: name '=' expr

   28 if_stmt: If expr ':' block elif_stmts

   29 elif_stmts: Elif expr ':' block elif_stmts
   30           | Else ':' block
   31           | EMPTY

   32 while_stmt: While expr ':' block

   33 for_stmt: For Ident In expr ':' block

   34 func_def: Def Ident '(' params_option ')' ret_type_option ':' block

   35 ret_type_option: Arrow type
   36                | EMPTY

   37 params_option: params
   38              | EMPTY

   39 params: param ',' params
   40       | param

   41 param: Ident ':' type
   42      | Ident

   43 class_def: Class Ident base_classes ':' block

   44 base_classes: '(' Idents ')'
   45             | EMPTY

   46 block: Newline Indent stmts Dedent
   47      | simple_stmt

   48 expr: disjunction

   49 disjunction: disjunction Or conjunction
   50            | conjunction

   51 conjunction: conjunction And inversion
   52            | inversion

   53 inversion: Not inversion
   54          | relation

   55 relation: sum EQ sum
   56         | sum NE sum
   57         | sum '<' sum
   58         | sum LE sum
   59         | sum '>' sum
   60         | sum GE sum
   61         | sum In sum
   62         | sum Not In sum
   63         | sum Is sum
   64         | sum Is Not sum
   65         | sum

   66 sum: sum '+' term
   67    | sum '-' term
   68    | term

   69 term: term '*' factor
   70     | term '/' factor
   71     | term '%' factor
   72     | factor

   73 factor: '+' factor
   74       | '-' factor
   75       | primary

   76 primary: name
   77        | atom

   78 name: Ident
   79     | name '.' Ident
   80     | name '[' expr ']'
   81     | call

   82 atom: True
   83     | False
   84     | None
   85     | Number
   86     | strings
   87     | '[' exprs_option ']'
   88     | '(' expr ')'

   89 strings: String strings
   90        | String

   91 exprs: expr ',' exprs
   92      | expr

   93 exprs_option: exprs
   94             | EMPTY

   95 Idents: Ident ',' Idents
   96       | Ident

   97 EMPTY: %empty


Terminals, with rules where they appear

$end (0) 0
'%' (37) 71
'(' (40) 26 34 44 88
')' (41) 26 34 44 88
'*' (42) 69
'+' (43) 66 73
',' (44) 39 91 95
'-' (45) 67 74
'.' (46) 79
'/' (47) 70
':' (58) 23 28 29 30 32 33 34 41 43
';' (59) 8
'<' (60) 57
'=' (61) 24 27
'>' (62) 59
'[' (91) 80 87
']' (93) 80 87
error (256)
Pass (258) 13
Break (259) 14
Continue (260) 15
Return (261) 12
Ident (262) 21 23 33 34 41 42 43 78 79 95 96
If (263) 28
Else (264) 30
Elif (265) 29
For (266) 33
While (267) 32
Def (268) 34
Arrow (269) 35
Class (270) 43
Or (271) 49
And (272) 51
Not (273) 53 62 64
In (274) 33 61 62
Is (275) 63 64
True (276) 82
False (277) 83
None (278) 84
Number (279) 85
String (280) 22 89 90
GE (281) 60
LE (282) 58
EQ (283) 55
NE (284) 56
NOTUSED (285)
Except (286)
Lambda (287)
With (288)
As (289)
Finally (290)
Nonlocal (291)
Assert (292)
Yield (293)
From (294)
Global (295)
Raise (296)
Del (297)
Try (298)
Import (299)
Indent (300) 46
Dedent (301) 46
Newline (302) 7 46
EndMarker (303) 1 2


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
file (66)
    on left: 1 2, on right: 0
stmts (67)
    on left: 3 4, on right: 1 3 46
stmt (68)
    on left: 5 6, on right: 3 4
simple_stmt (69)
    on left: 7 8, on right: 6 8 47
small_stmt (70)
    on left: 9 10 11 12 13 14 15, on right: 7 8
compound_stmt (71)
    on left: 16 17 18 19 20, on right: 5
type (72)
    on left: 21 22, on right: 23 35 41
decl (73)
    on left: 23, on right: 9
init_option (74)
    on left: 24 25, on right: 23
call (75)
    on left: 26, on right: 10 81
assign (76)
    on left: 27, on right: 11
if_stmt (77)
    on left: 28, on right: 18
elif_stmts (78)
    on left: 29 30 31, on right: 28 29
while_stmt (79)
    on left: 32, on right: 20
for_stmt (80)
    on left: 33, on right: 19
func_def (81)
    on left: 34, on right: 16
ret_type_option (82)
    on left: 35 36, on right: 34
params_option (83)
    on left: 37 38, on right: 34
params (84)
    on left: 39 40, on right: 37 39
param (85)
    on left: 41 42, on right: 39 40
class_def (86)
    on left: 43, on right: 17
base_classes (87)
    on left: 44 45, on right: 43
block (88)
    on left: 46 47, on right: 28 29 30 32 33 34 43
expr (89)
    on left: 48, on right: 12 24 27 28 29 32 33 80 88 91 92
disjunction (90)
    on left: 49 50, on right: 48 49
conjunction (91)
    on left: 51 52, on right: 49 50 51
inversion (92)
    on left: 53 54, on right: 51 52 53
relation (93)
    on left: 55 56 57 58 59 60 61 62 63 64 65, on right: 54
sum (94)
    on left: 66 67 68, on right: 55 56 57 58 59 60 61 62 63 64 65 66
    67
term (95)
    on left: 69 70 71 72, on right: 66 67 68 69 70 71
factor (96)
    on left: 73 74 75, on right: 69 70 71 72 73 74
primary (97)
    on left: 76 77, on right: 75
name (98)
    on left: 78 79 80 81, on right: 26 27 76 79 80
atom (99)
    on left: 82 83 84 85 86 87 88, on right: 77
strings (100)
    on left: 89 90, on right: 86 89
exprs (101)
    on left: 91 92, on right: 91 93
exprs_option (102)
    on left: 93 94, on right: 26 87
Idents (103)
    on left: 95 96, on right: 44 95
EMPTY (104)
    on left: 97, on right: 25 31 36 38 45 94


State 0

    0 $accept: . file $end

    Pass       shift, and go to state 1
    Break      shift, and go to state 2
    Continue   shift, and go to state 3
    Return     shift, and go to state 4
    Ident      shift, and go to state 5
    If         shift, and go to state 6
    For        shift, and go to state 7
    While      shift, and go to state 8
    Def        shift, and go to state 9
    Class      shift, and go to state 10
    EndMarker  shift, and go to state 11

    file           go to state 12
    stmts          go to state 13
    stmt           go to state 14
    simple_stmt    go to state 15
    small_stmt     go to state 16
    compound_stmt  go to state 17
    decl           go to state 18
    call           go to state 19
    assign         go to state 20
    if_stmt        go to state 21
    while_stmt     go to state 22
    for_stmt       go to state 23
    func_def       go to state 24
    class_def      go to state 25
    name           go to state 26


State 1

   13 small_stmt: Pass .

    $default  reduce using rule 13 (small_stmt)


State 2

   14 small_stmt: Break .

    $default  reduce using rule 14 (small_stmt)


State 3

   15 small_stmt: Continue .

    $default  reduce using rule 15 (small_stmt)


State 4

   12 small_stmt: Return . expr

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 39
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 5

   23 decl: Ident . ':' type init_option
   78 name: Ident .

    ':'  shift, and go to state 51

    $default  reduce using rule 78 (name)


State 6

   28 if_stmt: If . expr ':' block elif_stmts

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 52
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 7

   33 for_stmt: For . Ident In expr ':' block

    Ident  shift, and go to state 53


State 8

   32 while_stmt: While . expr ':' block

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 54
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 9

   34 func_def: Def . Ident '(' params_option ')' ret_type_option ':' block

    Ident  shift, and go to state 55


State 10

   43 class_def: Class . Ident base_classes ':' block

    Ident  shift, and go to state 56


State 11

    2 file: EndMarker .

    $default  reduce using rule 2 (file)


State 12

    0 $accept: file . $end

    $end  shift, and go to state 57


State 13

    1 file: stmts . EndMarker

    EndMarker  shift, and go to state 58


State 14

    3 stmts: stmt . stmts
    4      | stmt .

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5
    If        shift, and go to state 6
    For       shift, and go to state 7
    While     shift, and go to state 8
    Def       shift, and go to state 9
    Class     shift, and go to state 10

    $default  reduce using rule 4 (stmts)

    stmts          go to state 59
    stmt           go to state 14
    simple_stmt    go to state 15
    small_stmt     go to state 16
    compound_stmt  go to state 17
    decl           go to state 18
    call           go to state 19
    assign         go to state 20
    if_stmt        go to state 21
    while_stmt     go to state 22
    for_stmt       go to state 23
    func_def       go to state 24
    class_def      go to state 25
    name           go to state 26


State 15

    6 stmt: simple_stmt .

    $default  reduce using rule 6 (stmt)


State 16

    7 simple_stmt: small_stmt . Newline
    8            | small_stmt . ';' simple_stmt

    Newline  shift, and go to state 60
    ';'      shift, and go to state 61


State 17

    5 stmt: compound_stmt .

    $default  reduce using rule 5 (stmt)


State 18

    9 small_stmt: decl .

    $default  reduce using rule 9 (small_stmt)


State 19

   10 small_stmt: call .
   81 name: call .

    Newline   reduce using rule 10 (small_stmt)
    ';'       reduce using rule 10 (small_stmt)
    $default  reduce using rule 81 (name)


State 20

   11 small_stmt: assign .

    $default  reduce using rule 11 (small_stmt)


State 21

   18 compound_stmt: if_stmt .

    $default  reduce using rule 18 (compound_stmt)


State 22

   20 compound_stmt: while_stmt .

    $default  reduce using rule 20 (compound_stmt)


State 23

   19 compound_stmt: for_stmt .

    $default  reduce using rule 19 (compound_stmt)


State 24

   16 compound_stmt: func_def .

    $default  reduce using rule 16 (compound_stmt)


State 25

   17 compound_stmt: class_def .

    $default  reduce using rule 17 (compound_stmt)


State 26

   26 call: name . '(' exprs_option ')'
   27 assign: name . '=' expr
   79 name: name . '.' Ident
   80     | name . '[' expr ']'

    '='  shift, and go to state 62
    '('  shift, and go to state 63
    '.'  shift, and go to state 64
    '['  shift, and go to state 65


State 27

   78 name: Ident .

    $default  reduce using rule 78 (name)


State 28

   53 inversion: Not . inversion

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call       go to state 38
    inversion  go to state 66
    relation   go to state 43
    sum        go to state 44
    term       go to state 45
    factor     go to state 46
    primary    go to state 47
    name       go to state 48
    atom       go to state 49
    strings    go to state 50


State 29

   82 atom: True .

    $default  reduce using rule 82 (atom)


State 30

   83 atom: False .

    $default  reduce using rule 83 (atom)


State 31

   84 atom: None .

    $default  reduce using rule 84 (atom)


State 32

   85 atom: Number .

    $default  reduce using rule 85 (atom)


State 33

   89 strings: String . strings
   90        | String .

    String  shift, and go to state 33

    $default  reduce using rule 90 (strings)

    strings  go to state 67


State 34

   88 atom: '(' . expr ')'

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 68
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 35

   73 factor: '+' . factor

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    factor   go to state 69
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 36

   74 factor: '-' . factor

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    factor   go to state 70
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 37

   87 atom: '[' . exprs_option ']'

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    $default  reduce using rule 97 (EMPTY)

    call          go to state 38
    expr          go to state 71
    disjunction   go to state 40
    conjunction   go to state 41
    inversion     go to state 42
    relation      go to state 43
    sum           go to state 44
    term          go to state 45
    factor        go to state 46
    primary       go to state 47
    name          go to state 48
    atom          go to state 49
    strings       go to state 50
    exprs         go to state 72
    exprs_option  go to state 73
    EMPTY         go to state 74


State 38

   81 name: call .

    $default  reduce using rule 81 (name)


State 39

   12 small_stmt: Return expr .

    $default  reduce using rule 12 (small_stmt)


State 40

   48 expr: disjunction .
   49 disjunction: disjunction . Or conjunction

    Or  shift, and go to state 75

    $default  reduce using rule 48 (expr)


State 41

   50 disjunction: conjunction .
   51 conjunction: conjunction . And inversion

    And  shift, and go to state 76

    $default  reduce using rule 50 (disjunction)


State 42

   52 conjunction: inversion .

    $default  reduce using rule 52 (conjunction)


State 43

   54 inversion: relation .

    $default  reduce using rule 54 (inversion)


State 44

   55 relation: sum . EQ sum
   56         | sum . NE sum
   57         | sum . '<' sum
   58         | sum . LE sum
   59         | sum . '>' sum
   60         | sum . GE sum
   61         | sum . In sum
   62         | sum . Not In sum
   63         | sum . Is sum
   64         | sum . Is Not sum
   65         | sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    Not  shift, and go to state 77
    In   shift, and go to state 78
    Is   shift, and go to state 79
    GE   shift, and go to state 80
    LE   shift, and go to state 81
    EQ   shift, and go to state 82
    NE   shift, and go to state 83
    '<'  shift, and go to state 84
    '>'  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 65 (relation)


State 45

   68 sum: term .
   69 term: term . '*' factor
   70     | term . '/' factor
   71     | term . '%' factor

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 68 (sum)


State 46

   72 term: factor .

    $default  reduce using rule 72 (term)


State 47

   75 factor: primary .

    $default  reduce using rule 75 (factor)


State 48

   26 call: name . '(' exprs_option ')'
   76 primary: name .
   79 name: name . '.' Ident
   80     | name . '[' expr ']'

    '('  shift, and go to state 63
    '.'  shift, and go to state 64
    '['  shift, and go to state 65

    $default  reduce using rule 76 (primary)


State 49

   77 primary: atom .

    $default  reduce using rule 77 (primary)


State 50

   86 atom: strings .

    $default  reduce using rule 86 (atom)


State 51

   23 decl: Ident ':' . type init_option

    Ident   shift, and go to state 91
    String  shift, and go to state 92

    type  go to state 93


State 52

   28 if_stmt: If expr . ':' block elif_stmts

    ':'  shift, and go to state 94


State 53

   33 for_stmt: For Ident . In expr ':' block

    In  shift, and go to state 95


State 54

   32 while_stmt: While expr . ':' block

    ':'  shift, and go to state 96


State 55

   34 func_def: Def Ident . '(' params_option ')' ret_type_option ':' block

    '('  shift, and go to state 97


State 56

   43 class_def: Class Ident . base_classes ':' block

    '('  shift, and go to state 98

    $default  reduce using rule 97 (EMPTY)

    base_classes  go to state 99
    EMPTY         go to state 100


State 57

    0 $accept: file $end .

    $default  accept


State 58

    1 file: stmts EndMarker .

    $default  reduce using rule 1 (file)


State 59

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


State 60

    7 simple_stmt: small_stmt Newline .

    $default  reduce using rule 7 (simple_stmt)


State 61

    8 simple_stmt: small_stmt ';' . simple_stmt

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5

    simple_stmt  go to state 101
    small_stmt   go to state 16
    decl         go to state 18
    call         go to state 19
    assign       go to state 20
    name         go to state 26


State 62

   27 assign: name '=' . expr

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 102
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 63

   26 call: name '(' . exprs_option ')'

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    $default  reduce using rule 97 (EMPTY)

    call          go to state 38
    expr          go to state 71
    disjunction   go to state 40
    conjunction   go to state 41
    inversion     go to state 42
    relation      go to state 43
    sum           go to state 44
    term          go to state 45
    factor        go to state 46
    primary       go to state 47
    name          go to state 48
    atom          go to state 49
    strings       go to state 50
    exprs         go to state 72
    exprs_option  go to state 103
    EMPTY         go to state 74


State 64

   79 name: name '.' . Ident

    Ident  shift, and go to state 104


State 65

   80 name: name '[' . expr ']'

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 105
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 66

   53 inversion: Not inversion .

    $default  reduce using rule 53 (inversion)


State 67

   89 strings: String strings .

    $default  reduce using rule 89 (strings)


State 68

   88 atom: '(' expr . ')'

    ')'  shift, and go to state 106


State 69

   73 factor: '+' factor .

    $default  reduce using rule 73 (factor)


State 70

   74 factor: '-' factor .

    $default  reduce using rule 74 (factor)


State 71

   91 exprs: expr . ',' exprs
   92      | expr .

    ','  shift, and go to state 107

    $default  reduce using rule 92 (exprs)


State 72

   93 exprs_option: exprs .

    $default  reduce using rule 93 (exprs_option)


State 73

   87 atom: '[' exprs_option . ']'

    ']'  shift, and go to state 108


State 74

   94 exprs_option: EMPTY .

    $default  reduce using rule 94 (exprs_option)


State 75

   49 disjunction: disjunction Or . conjunction

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    conjunction  go to state 109
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 76

   51 conjunction: conjunction And . inversion

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call       go to state 38
    inversion  go to state 110
    relation   go to state 43
    sum        go to state 44
    term       go to state 45
    factor     go to state 46
    primary    go to state 47
    name       go to state 48
    atom       go to state 49
    strings    go to state 50


State 77

   62 relation: sum Not . In sum

    In  shift, and go to state 111


State 78

   61 relation: sum In . sum

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 112
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 79

   63 relation: sum Is . sum
   64         | sum Is . Not sum

    Ident   shift, and go to state 27
    Not     shift, and go to state 113
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 114
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 80

   60 relation: sum GE . sum

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 115
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 81

   58 relation: sum LE . sum

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 116
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 82

   55 relation: sum EQ . sum

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 117
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 83

   56 relation: sum NE . sum

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 118
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 84

   57 relation: sum '<' . sum

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 119
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 85

   59 relation: sum '>' . sum

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 120
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 86

   66 sum: sum '+' . term

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    term     go to state 121
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 87

   67 sum: sum '-' . term

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    term     go to state 122
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 88

   69 term: term '*' . factor

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    factor   go to state 123
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 89

   70 term: term '/' . factor

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    factor   go to state 124
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 90

   71 term: term '%' . factor

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    factor   go to state 125
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 91

   21 type: Ident .

    $default  reduce using rule 21 (type)


State 92

   22 type: String .

    $default  reduce using rule 22 (type)


State 93

   23 decl: Ident ':' type . init_option

    '='  shift, and go to state 126

    $default  reduce using rule 97 (EMPTY)

    init_option  go to state 127
    EMPTY        go to state 128


State 94

   28 if_stmt: If expr ':' . block elif_stmts

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5
    Newline   shift, and go to state 129

    simple_stmt  go to state 130
    small_stmt   go to state 16
    decl         go to state 18
    call         go to state 19
    assign       go to state 20
    block        go to state 131
    name         go to state 26


State 95

   33 for_stmt: For Ident In . expr ':' block

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 132
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 96

   32 while_stmt: While expr ':' . block

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5
    Newline   shift, and go to state 129

    simple_stmt  go to state 130
    small_stmt   go to state 16
    decl         go to state 18
    call         go to state 19
    assign       go to state 20
    block        go to state 133
    name         go to state 26


State 97

   34 func_def: Def Ident '(' . params_option ')' ret_type_option ':' block

    Ident  shift, and go to state 134

    $default  reduce using rule 97 (EMPTY)

    params_option  go to state 135
    params         go to state 136
    param          go to state 137
    EMPTY          go to state 138


State 98

   44 base_classes: '(' . Idents ')'

    Ident  shift, and go to state 139

    Idents  go to state 140


State 99

   43 class_def: Class Ident base_classes . ':' block

    ':'  shift, and go to state 141


State 100

   45 base_classes: EMPTY .

    $default  reduce using rule 45 (base_classes)


State 101

    8 simple_stmt: small_stmt ';' simple_stmt .

    $default  reduce using rule 8 (simple_stmt)


State 102

   27 assign: name '=' expr .

    $default  reduce using rule 27 (assign)


State 103

   26 call: name '(' exprs_option . ')'

    ')'  shift, and go to state 142


State 104

   79 name: name '.' Ident .

    $default  reduce using rule 79 (name)


State 105

   80 name: name '[' expr . ']'

    ']'  shift, and go to state 143


State 106

   88 atom: '(' expr ')' .

    $default  reduce using rule 88 (atom)


State 107

   91 exprs: expr ',' . exprs

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 71
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50
    exprs        go to state 144


State 108

   87 atom: '[' exprs_option ']' .

    $default  reduce using rule 87 (atom)


State 109

   49 disjunction: disjunction Or conjunction .
   51 conjunction: conjunction . And inversion

    And  shift, and go to state 76

    $default  reduce using rule 49 (disjunction)


State 110

   51 conjunction: conjunction And inversion .

    $default  reduce using rule 51 (conjunction)


State 111

   62 relation: sum Not In . sum

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 145
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 112

   61 relation: sum In sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 61 (relation)


State 113

   64 relation: sum Is Not . sum

    Ident   shift, and go to state 27
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call     go to state 38
    sum      go to state 146
    term     go to state 45
    factor   go to state 46
    primary  go to state 47
    name     go to state 48
    atom     go to state 49
    strings  go to state 50


State 114

   63 relation: sum Is sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 63 (relation)


State 115

   60 relation: sum GE sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 60 (relation)


State 116

   58 relation: sum LE sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 58 (relation)


State 117

   55 relation: sum EQ sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 55 (relation)


State 118

   56 relation: sum NE sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 56 (relation)


State 119

   57 relation: sum '<' sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 57 (relation)


State 120

   59 relation: sum '>' sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 59 (relation)


State 121

   66 sum: sum '+' term .
   69 term: term . '*' factor
   70     | term . '/' factor
   71     | term . '%' factor

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 66 (sum)


State 122

   67 sum: sum '-' term .
   69 term: term . '*' factor
   70     | term . '/' factor
   71     | term . '%' factor

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 67 (sum)


State 123

   69 term: term '*' factor .

    $default  reduce using rule 69 (term)


State 124

   70 term: term '/' factor .

    $default  reduce using rule 70 (term)


State 125

   71 term: term '%' factor .

    $default  reduce using rule 71 (term)


State 126

   24 init_option: '=' . expr

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 147
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 127

   23 decl: Ident ':' type init_option .

    $default  reduce using rule 23 (decl)


State 128

   25 init_option: EMPTY .

    $default  reduce using rule 25 (init_option)


State 129

   46 block: Newline . Indent stmts Dedent

    Indent  shift, and go to state 148


State 130

   47 block: simple_stmt .

    $default  reduce using rule 47 (block)


State 131

   28 if_stmt: If expr ':' block . elif_stmts

    Else  shift, and go to state 149
    Elif  shift, and go to state 150

    $default  reduce using rule 97 (EMPTY)

    elif_stmts  go to state 151
    EMPTY       go to state 152


State 132

   33 for_stmt: For Ident In expr . ':' block

    ':'  shift, and go to state 153


State 133

   32 while_stmt: While expr ':' block .

    $default  reduce using rule 32 (while_stmt)


State 134

   41 param: Ident . ':' type
   42      | Ident .

    ':'  shift, and go to state 154

    $default  reduce using rule 42 (param)


State 135

   34 func_def: Def Ident '(' params_option . ')' ret_type_option ':' block

    ')'  shift, and go to state 155


State 136

   37 params_option: params .

    $default  reduce using rule 37 (params_option)


State 137

   39 params: param . ',' params
   40       | param .

    ','  shift, and go to state 156

    $default  reduce using rule 40 (params)


State 138

   38 params_option: EMPTY .

    $default  reduce using rule 38 (params_option)


State 139

   95 Idents: Ident . ',' Idents
   96       | Ident .

    ','  shift, and go to state 157

    $default  reduce using rule 96 (Idents)


State 140

   44 base_classes: '(' Idents . ')'

    ')'  shift, and go to state 158


State 141

   43 class_def: Class Ident base_classes ':' . block

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5
    Newline   shift, and go to state 129

    simple_stmt  go to state 130
    small_stmt   go to state 16
    decl         go to state 18
    call         go to state 19
    assign       go to state 20
    block        go to state 159
    name         go to state 26


State 142

   26 call: name '(' exprs_option ')' .

    $default  reduce using rule 26 (call)


State 143

   80 name: name '[' expr ']' .

    $default  reduce using rule 80 (name)


State 144

   91 exprs: expr ',' exprs .

    $default  reduce using rule 91 (exprs)


State 145

   62 relation: sum Not In sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 62 (relation)


State 146

   64 relation: sum Is Not sum .
   66 sum: sum . '+' term
   67    | sum . '-' term

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 64 (relation)


State 147

   24 init_option: '=' expr .

    $default  reduce using rule 24 (init_option)


State 148

   46 block: Newline Indent . stmts Dedent

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5
    If        shift, and go to state 6
    For       shift, and go to state 7
    While     shift, and go to state 8
    Def       shift, and go to state 9
    Class     shift, and go to state 10

    stmts          go to state 160
    stmt           go to state 14
    simple_stmt    go to state 15
    small_stmt     go to state 16
    compound_stmt  go to state 17
    decl           go to state 18
    call           go to state 19
    assign         go to state 20
    if_stmt        go to state 21
    while_stmt     go to state 22
    for_stmt       go to state 23
    func_def       go to state 24
    class_def      go to state 25
    name           go to state 26


State 149

   30 elif_stmts: Else . ':' block

    ':'  shift, and go to state 161


State 150

   29 elif_stmts: Elif . expr ':' block elif_stmts

    Ident   shift, and go to state 27
    Not     shift, and go to state 28
    True    shift, and go to state 29
    False   shift, and go to state 30
    None    shift, and go to state 31
    Number  shift, and go to state 32
    String  shift, and go to state 33
    '('     shift, and go to state 34
    '+'     shift, and go to state 35
    '-'     shift, and go to state 36
    '['     shift, and go to state 37

    call         go to state 38
    expr         go to state 162
    disjunction  go to state 40
    conjunction  go to state 41
    inversion    go to state 42
    relation     go to state 43
    sum          go to state 44
    term         go to state 45
    factor       go to state 46
    primary      go to state 47
    name         go to state 48
    atom         go to state 49
    strings      go to state 50


State 151

   28 if_stmt: If expr ':' block elif_stmts .

    $default  reduce using rule 28 (if_stmt)


State 152

   31 elif_stmts: EMPTY .

    $default  reduce using rule 31 (elif_stmts)


State 153

   33 for_stmt: For Ident In expr ':' . block

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5
    Newline   shift, and go to state 129

    simple_stmt  go to state 130
    small_stmt   go to state 16
    decl         go to state 18
    call         go to state 19
    assign       go to state 20
    block        go to state 163
    name         go to state 26


State 154

   41 param: Ident ':' . type

    Ident   shift, and go to state 91
    String  shift, and go to state 92

    type  go to state 164


State 155

   34 func_def: Def Ident '(' params_option ')' . ret_type_option ':' block

    Arrow  shift, and go to state 165

    $default  reduce using rule 97 (EMPTY)

    ret_type_option  go to state 166
    EMPTY            go to state 167


State 156

   39 params: param ',' . params

    Ident  shift, and go to state 134

    params  go to state 168
    param   go to state 137


State 157

   95 Idents: Ident ',' . Idents

    Ident  shift, and go to state 139

    Idents  go to state 169


State 158

   44 base_classes: '(' Idents ')' .

    $default  reduce using rule 44 (base_classes)


State 159

   43 class_def: Class Ident base_classes ':' block .

    $default  reduce using rule 43 (class_def)


State 160

   46 block: Newline Indent stmts . Dedent

    Dedent  shift, and go to state 170


State 161

   30 elif_stmts: Else ':' . block

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5
    Newline   shift, and go to state 129

    simple_stmt  go to state 130
    small_stmt   go to state 16
    decl         go to state 18
    call         go to state 19
    assign       go to state 20
    block        go to state 171
    name         go to state 26


State 162

   29 elif_stmts: Elif expr . ':' block elif_stmts

    ':'  shift, and go to state 172


State 163

   33 for_stmt: For Ident In expr ':' block .

    $default  reduce using rule 33 (for_stmt)


State 164

   41 param: Ident ':' type .

    $default  reduce using rule 41 (param)


State 165

   35 ret_type_option: Arrow . type

    Ident   shift, and go to state 91
    String  shift, and go to state 92

    type  go to state 173


State 166

   34 func_def: Def Ident '(' params_option ')' ret_type_option . ':' block

    ':'  shift, and go to state 174


State 167

   36 ret_type_option: EMPTY .

    $default  reduce using rule 36 (ret_type_option)


State 168

   39 params: param ',' params .

    $default  reduce using rule 39 (params)


State 169

   95 Idents: Ident ',' Idents .

    $default  reduce using rule 95 (Idents)


State 170

   46 block: Newline Indent stmts Dedent .

    $default  reduce using rule 46 (block)


State 171

   30 elif_stmts: Else ':' block .

    $default  reduce using rule 30 (elif_stmts)


State 172

   29 elif_stmts: Elif expr ':' . block elif_stmts

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5
    Newline   shift, and go to state 129

    simple_stmt  go to state 130
    small_stmt   go to state 16
    decl         go to state 18
    call         go to state 19
    assign       go to state 20
    block        go to state 175
    name         go to state 26


State 173

   35 ret_type_option: Arrow type .

    $default  reduce using rule 35 (ret_type_option)


State 174

   34 func_def: Def Ident '(' params_option ')' ret_type_option ':' . block

    Pass      shift, and go to state 1
    Break     shift, and go to state 2
    Continue  shift, and go to state 3
    Return    shift, and go to state 4
    Ident     shift, and go to state 5
    Newline   shift, and go to state 129

    simple_stmt  go to state 130
    small_stmt   go to state 16
    decl         go to state 18
    call         go to state 19
    assign       go to state 20
    block        go to state 176
    name         go to state 26


State 175

   29 elif_stmts: Elif expr ':' block . elif_stmts

    Else  shift, and go to state 149
    Elif  shift, and go to state 150

    $default  reduce using rule 97 (EMPTY)

    elif_stmts  go to state 177
    EMPTY       go to state 152


State 176

   34 func_def: Def Ident '(' params_option ')' ret_type_option ':' block .

    $default  reduce using rule 34 (func_def)


State 177

   29 elif_stmts: Elif expr ':' block elif_stmts .

    $default  reduce using rule 29 (elif_stmts)
